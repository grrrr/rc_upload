stages:
  - build
  - register
  - deploy
  - push


build_docker:
  stage: build
  rules:
#    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
    - if: $CI_PIPELINE_SOURCE != "api" # not on trigger
  image: docker:latest
  variables:
    IMAGE_NAME: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  script:
    - docker build -t $IMAGE_NAME .
    - docker save $IMAGE_NAME > $CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG.tar
  artifacts:
    paths:
      - *.tar
    expire_in: 1 hour


register_docker:
  stage: register
  allow_failure: true
  rules:
#    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
    - if: $CI_PIPELINE_SOURCE != "api" &&
         '$CI_COMMIT_TAG'
  image: docker:latest
  variables:
    IMAGE_NAME: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  needs: 
    - build_docker
  script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
    - docker load < $CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG.tar
    - docker push $IMAGE_NAME


deploy:
  stage: deploy
  only:
    - triggers
#  needs:
#    - pipeline: $PARENT_PIPELINE_ID
#      job: $PARENT_PIPELINE_JOB
#      artifacts: false # workaround for bug, see https://gitlab.com/gitlab-org/gitlab/-/issues/367229
  tags:
    - docker
    - rcedit
  before_script:
    # prepare environment
    - apt-get update -qq || true
    - apt-get install git make python3 python3-venv pandoc curl unzip -yy
    - python3 -m venv .
    - . ./bin/activate
    - pip3 install -r requirements.txt
  script:
    # fetch artifacts
    - ZIPFILE=$(mktemp -t artifactXXXXX)
    - ARTIFACT_DIR=$(mktemp -d -t artifactXXXXX)
    - curl --location --output $ZIPFILE --header "JOB-TOKEN:$CI_JOB_TOKEN" "${CI_API_V4_URL}/projects/$PARENT_PROJECT_ID/jobs/artifacts/$PARENT_PROJECT_REF/download?job=$PARENT_PIPELINE_JOB"
    - unzip $ZIPFILE -d $ARTIFACT_DIR || cat $ZIPFILE
    # transfer to RC
    - make DST=$ARTIFACT_DIR


push_github:
  stage: push
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH &&
          $CI_PIPELINE_SOURCE != "api" # not on trigger
  tags:
    - docker
  image: debian:bookworm-slim
  before_script:
    # prepare environment
    - apt-get update -qq || true
    - apt-get install curl  -yy
  variables:
    PUSH_GITHUB_PROJECT_ID: 178
  script:
    # trigger push_github project
    - 
      curl --request POST 
      --form token=$PUSH_GITHUB_TOKEN 
      --form ref=main 
      --form variables[PARENT_PROJECT_PATH]=$CI_PROJECT_PATH
      --form variables[PARENT_PROJECT_NAME]=$CI_PROJECT_NAME
      --form variables[PARENT_PROJECT_REF]=$CI_COMMIT_REF_NAME
      ${CI_API_V4_URL}/projects/$PUSH_GITHUB_PROJECT_ID/trigger/pipeline
